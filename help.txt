可用命令列表
  draw <articleId>    渲染数据库里的一篇文章, 写入数据库.
                      - Stdout: 渲染的文章id, 如果失败为-1
  drawCore [filename] 用filename(或者缺省为stdin)作为文章来渲染.
                      输出到stdout. (预览工具用的就是这个)
                      - Stdin: Markdown文本
                      - Stdout: 完整的静态HTML文本
  new <type> [dirId]  添加一个文章/目录到dirId对应的目录
                      dirId默认为0, 代表根目录.
                      - Stdin: 如果type=0, 则是Markdown文本
                               如果type=1, 则是目录名, 写在第一行中
                      - Stdout: 新添加的文章/子目录id, 如果失败为-1
  drag <articleId>    获取一篇文章的Markdown原文
                      - Stdout: 对应文章的Markdown原文, 如果失败为-1
  edit <type> <id>    编辑对应id的一个文章/目录
                      - Stdin: 如果type=0, 则是Markdown文本
                               如果type=1, 则是目录名, 写在第一行中
                      - Stdout: 修改的文章/子目录id, 如果失败为-1
  move [dirId]        批量移动文章/目录到dirId对应的目录
                      dirId默认为0, 代表根目录.
                      - Stdin: 每行代表一个文章/目录, 格式如下:
                          <type> <id>
                      - Stdout: 返回移动成功的个数
  remove              批量删除文章/目录
                      - Stdin: 每行代表一个文章/目录, 格式如下:
                          <type> <id>
                      - Stdout: 返回删除成功的个数
  read <type> <id>    获取一个文章的标题, 内容及各种信息,
                      或者列出一个目录的所有文章的简要信息
                      - Stdout:
                        - 若type=0, 则是以下Json数据:
                          {
                            title      string
                            html       string
                            createdT   datetime
                            modifiedT  datetime
                            // tags       []string
                            // contents   []{
                              // text       string
                              // id         string
                              // contents   []{...}
                            // }
                          }
                        - 若type=1, 则是以下Json数据:
                          {
                            title      string
                            createdT   datetime
                            modifiedT  datetime
                            list []{
                              id         int
                              type       int
                              text       string
                              createdT   datetime
                              modifiedT  datetime
                            }
                          }
  link <type> <id>    查询一个文章或目录的目录链. 如果是文章, 则等同
                      于查询其所处目录. 如果是目录, 则是从根目录到它
                      本身经过的所有目录的id和标题.
                      - Stdout: 以下Json数据:
                        {
                          link    []{
                            id       int
                            title    string
                          }
                        }
